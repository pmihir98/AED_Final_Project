/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EducationOrganization;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.EducationOrganisation;
import Business.Organization.Organization;
import Business.RandomFiles.Child;
import Business.RandomFiles.ChildDirectory;
import Business.RandomFiles.FundReqToGov;
import Business.RandomFiles.Problem;
import Business.RandomFiles.SendToEduConsuWorkRequest;
import Business.Role.Gender;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Businesss.EcoSystem;
import DonationOrganization.ReqToGovJPanel;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Utkarsh
 */
public class EducationAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EducationAdminJPanel
     */
    private JPanel rightJPanel;
    private EducationOrganisation educationOrganisation;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    public EducationAdminJPanel(JPanel righJPanel, EducationOrganisation educationOrganisation, Enterprise enterprise, UserAccount userAccount, EcoSystem business) {
        initComponents();

        this.rightJPanel = righJPanel;
        this.educationOrganisation = educationOrganisation;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.business = business;

        childNameTxt.setEnabled(false);
        agetxt.setEnabled(false);
        addChildReal.setEnabled(false);
        
        problemTxt.setEnabled(false);
        sendToCounselor.setEnabled(false);
        
        orgRepLabel.setText(educationOrganisation.getName());

        populateTechingStaff();
        populateChildren();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        updateChildBtn = new javax.swing.JButton();
        deleteChild = new javax.swing.JButton();
        addChildReal = new javax.swing.JButton();
        childNameTxt = new javax.swing.JTextField();
        agetxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        childTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        standardTxt = new javax.swing.JTextField();
        genderBox = new javax.swing.JComboBox<>();
        needCOunselingBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        problemTxt = new javax.swing.JTextField();
        sendToCounselor = new javax.swing.JButton();
        addChildButtonReq = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        orgRepLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Existing Children:");

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Contact", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(staffTable);

        jLabel3.setText("Name");

        jLabel5.setText("Age");

        jLabel6.setText("Gender");

        updateChildBtn.setText("Update Child");
        updateChildBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateChildBtnActionPerformed(evt);
            }
        });

        deleteChild.setText("Free Child From Orghanage");
        deleteChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteChildActionPerformed(evt);
            }
        });

        addChildReal.setText("Add Child");
        addChildReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChildRealActionPerformed(evt);
            }
        });

        childNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childNameTxtActionPerformed(evt);
            }
        });

        agetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agetxtActionPerformed(evt);
            }
        });

        childTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Age", "Gender", "Standard", "CurProSol"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(childTable);

        jLabel4.setText("Teaching Staff:");

        jLabel7.setText("Standard");

        standardTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standardTxtActionPerformed(evt);
            }
        });

        genderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MALE", "FEMALE" }));

        needCOunselingBtn.setText("Need Counseling?");
        needCOunselingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                needCOunselingBtnActionPerformed(evt);
            }
        });

        jLabel8.setText("Problem:  ");

        sendToCounselor.setText("Send the Child to Counselor");
        sendToCounselor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToCounselorActionPerformed(evt);
            }
        });

        addChildButtonReq.setText("Add New Child??");
        addChildButtonReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChildButtonReqActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Organisation: ");

        orgRepLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orgRepLabel.setText("replace");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gif-professor-3.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(addChildButtonReq, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteChild)
                                    .addGap(18, 18, 18)
                                    .addComponent(updateChildBtn))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(78, 78, 78)
                                .addComponent(orgRepLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(genderBox, 0, 106, Short.MAX_VALUE)
                                        .addComponent(agetxt, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                        .addComponent(standardTxt))
                                    .addComponent(childNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addComponent(jLabel8)
                                .addGap(45, 45, 45))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(addChildReal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(needCOunselingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(problemTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendToCounselor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orgRepLabel))
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateChildBtn)
                    .addComponent(deleteChild)
                    .addComponent(addChildButtonReq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(childNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(needCOunselingBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(agetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(problemTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(standardTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addChildReal)
                    .addComponent(sendToCounselor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void childNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_childNameTxtActionPerformed

    private void agetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agetxtActionPerformed

    private void standardTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standardTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_standardTxtActionPerformed

    private void addChildButtonReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChildButtonReqActionPerformed
        childNameTxt.setEnabled(true);
        agetxt.setEnabled(true);
        addChildReal.setEnabled(true);
    }//GEN-LAST:event_addChildButtonReqActionPerformed

    private void deleteChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteChildActionPerformed
      
        int selectedRow = childTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!");
            return;
        }
        Child child = (Child) childTable.getValueAt(selectedRow, 0);
        
        if(educationOrganisation.getChildDirectory() == null || educationOrganisation.getChildDirectory().getChildList() == null ){
            educationOrganisation.setChildDirectory(new ChildDirectory());
        }
        
        
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        rightJPanel.add("FreeAChildJPanel", new FreeAChildJPanel(rightJPanel, educationOrganisation,  child));
        layout.next(rightJPanel);
        
        
        educationOrganisation.getChildDirectory().getChildList().remove(child);

        populateChildren();
    }//GEN-LAST:event_deleteChildActionPerformed

    private void addChildRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChildRealActionPerformed
        
        if(educationOrganisation.getChildDirectory() == null){
            educationOrganisation.setChildDirectory(new ChildDirectory());
        }
        Child c = educationOrganisation.getChildDirectory().addChild();
        c.setAge(agetxt.getText());
        if((genderBox.getSelectedItem()) == "MALE"){
            c.setGender(Gender.Male);
        }else{
            c.setGender(Gender.Female);
        }
        
        c.setName(childNameTxt.getText());
        c.setStandard(Integer.valueOf(standardTxt.getText()));
        
        populateChildren();
        
        agetxt.setText("");
        childNameTxt.setText("");
        standardTxt.setText("");
    }//GEN-LAST:event_addChildRealActionPerformed

    private void updateChildBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateChildBtnActionPerformed
             int selectedRow = childTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!");
            return;
        }
        Child child = (Child) childTable.getValueAt(selectedRow, 0);
        if(child.getProblems() == null){
            child.setProblems(new ArrayList<>());
        }
    }//GEN-LAST:event_updateChildBtnActionPerformed

    private void needCOunselingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_needCOunselingBtnActionPerformed
        
        JOptionPane.showMessageDialog(this, "Select a child row and insert the reason");
        problemTxt.setEnabled(true);
        sendToCounselor.setEnabled(true);
       // needCOunselingBtn.setEnabled(false);
    }//GEN-LAST:event_needCOunselingBtnActionPerformed

    private void sendToCounselorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToCounselorActionPerformed
        //Create a work request and send to counseler with updating the child with the problem associated
        
        int selectedRow = childTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row!");
            return;
        }
        Child child = (Child) childTable.getValueAt(selectedRow, 0);
        if(child.getProblems() == null){
            child.setProblems(new ArrayList<>());
            
        }
        Problem p = new Problem(problemTxt.getText(), "Processing");
        child.getProblems().add(p);
        child.setCurrentProblem(p);
        
        SendToEduConsuWorkRequest sendToEduConsuWorkRequest = new SendToEduConsuWorkRequest();
        
        sendToEduConsuWorkRequest.setMessage(child);
        sendToEduConsuWorkRequest.setRequestDate(new Date());
        sendToEduConsuWorkRequest.setSender(userAccount);
        sendToEduConsuWorkRequest.setStatus("Sent");
        
        //Dd the req to queue
        educationOrganisation.getWorkQueue().getWorkRequestList().add(sendToEduConsuWorkRequest);
        userAccount.getWorkQueue().getWorkRequestList().add(sendToEduConsuWorkRequest);
        
        JOptionPane.showMessageDialog(this, "Child details are sent to counsellor successfully!");
        
        problemTxt.setText("");
        problemTxt.setEnabled(false);
        //sendToCounselor.setEnabled(false);
        
        
        
        
        
    }//GEN-LAST:event_sendToCounselorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addChildButtonReq;
    private javax.swing.JButton addChildReal;
    private javax.swing.JTextField agetxt;
    private javax.swing.JTextField childNameTxt;
    private javax.swing.JTable childTable;
    private javax.swing.JButton deleteChild;
    private javax.swing.JComboBox<String> genderBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton needCOunselingBtn;
    private javax.swing.JLabel orgRepLabel;
    private javax.swing.JTextField problemTxt;
    private javax.swing.JButton sendToCounselor;
    private javax.swing.JTable staffTable;
    private javax.swing.JTextField standardTxt;
    private javax.swing.JButton updateChildBtn;
    // End of variables declaration//GEN-END:variables

    public void populateChildren() {

        DefaultTableModel model = (DefaultTableModel) childTable.getModel();
        model.setRowCount(0);

        if (educationOrganisation.getChildDirectory() == null || educationOrganisation.getChildDirectory().getChildList() == null) {
            JOptionPane.showMessageDialog(this, "No children are present in orphange as of now!!!");
            return;
        }

        for (Child e : educationOrganisation.getChildDirectory().getChildList()) {

            Object[] row = new Object[6];

            row[0] = e;
            row[1] = e.getId();
            row[2] = e.getAge();
            row[3] = e.getGender();
            row[4] = e.getStandard();
            row[5] = e.getCurrentProblem() == null ? null : e.getCurrentProblem().getSolution();

            model.addRow(row);

        }

    }

    private void populateTechingStaff() {

        DefaultTableModel model = (DefaultTableModel) staffTable.getModel();
        model.setRowCount(0);

        //Emplyee directory is never empty if we reach here, so no check
        for (Employee e : educationOrganisation.getEmployeeDirectory().getEmployeeList()) {

            Object[] row = new Object[4];
            row[0] = e;
            row[1] = e.getId();
            row[2] = e.getPhone();
            row[3] = e.getAddress();

            model.addRow(row);

        }

    }
}
